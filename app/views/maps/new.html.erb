<% content_for :head do %>
  <%= stylesheet_link_tag "lib/jquery.seat-charts", "map" %>
  <%= javascript_include_tag 'lib/jquery.seat-charts.min' %>
<% end %>

<h2><%= t('menu.map.new')%></h2>
<%= link_to t('back'), admin_index_path %>

<%= form_with(model: @map, local: true) do |form| %>
<% if @map.errors.any? %>
  <div id="error_explanation">
    <h2><%= pluralize(@map.errors.count, "error") %>
      <%= t('maps.error') %></h2>

    <ul>
      <% @map.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
    </ul>
  </div>
<% end %>

<table>
  <tr>
    <td>
      <label for=""><%= t('project') %></label>
    </td>
    <td><%= form.select :project_id, Project.all.collect { |m| [ m.name, m.id ] }, {}, :id => "cmbbxProjects" %></td>
  </tr>
  <tr>
    <td>
      <label for="txtMapName"><%= t('maps.name') %></label>
    </td>
    <td><%= form.text_field :name, id:"txtfldMapName" %></td>
  </tr>
  <tr>
    <td>
      <label for="txtMapX"><%= t('maps.width') %></label>
    </td>
    <td><input type="text" id="txtMapX" value="2"></td>
  </tr>
  <tr>
    <td>
      <label for="txtMapY"><%= t('maps.height') %></label>
    </td>
    <td><input type="text" id="txtMapY" value="2"></td>
  </tr>
  <tr>
    <td><input type="button" id="bttnCreateMap" value="Generate map"></td>
    <td><input type="button" id="bttnResetMap" value="Reset map"></td>
    <td><%= form.submit t('maps.save'), id:"bttnSaveMap" %></td>
  </tr>
</table>
<br/>
<div id="map-container">
  <div id="seat-map">
    <h3 style="visibility: hidden" id="hdrCounter">
      <%= t('maps.seats') %>(<span id="counter">0</span>):</h3>
  </div>
</div>

<%= form.hidden_field :seats, id:"hddnMapToSave"%>
<%= form.hidden_field :height, id:"hddnMapY"%>
<%= form.hidden_field :width, id:"hddnMapX"%>
<%= form.hidden_field :seats_total, id:"hddnCounter", value:0%>
<% end %>

<script type="text/javascript">

var firstSeatLabel = 1;
var mapFinal;

function remove(array, element) {
  const index = array.indexOf(element);
  array.splice(index, 1);
}

$(document).ready(function () {

  $('#bttnCreateMap').prop('disabled', false);
  $('#bttnResetMap').prop('disabled', true);
  $('#bttnSaveMap').prop('disabled', true);
  $('#counter').val(0);
  $('#hddnCounter').val(0);
  $('#hddnMapToSave').val(null);
  $('#hddnMapY').val(null);
  $('#hddnCounter').val(null);
  var num = randomNumberGenerator();
  $('#txtfldMapName').val("Mapa" + num);
  $("#txtMapX").keydown(function (e) {
    textFieldOnlyNumbers(e);
  });
  $("#txtMapY").keydown(function (e) {
    textFieldOnlyNumbers(e);
  });

})

$('#bttnResetMap').click(function () {

  $(".seatCharts-row").css("width", "");
  $('#bttnCreateMap').prop('disabled', false);
  $('#bttnResetMap').prop('disabled', true);
  $('#bttnSaveMap').prop('disabled', true);
  $('#map-container').empty();
  $('#map-container').html('<div id="seat-map"><h3 style="visibility: hidden" id="hdrCounter"> Cantidad de asientos (<span id="counter">0</span>):</h3></div>');
  $('#counter').val(0);
  $('#hddnCounter').val(0);
  firstSeatLabel = 1;

})

$('#bttnCreateMap').click(function () {

  var x = $('#txtMapX').val();
  var y = $('#txtMapY').val();

  var showMap = true;

  if (x === "" || y === "") {
    alert("Las medidas de la tabla nodeben ser vacias");
    showMap = false;
  }

  if (x < 1 || y < 1) {
    alert("Las medidas de la tabla deben ser mayor a 0");
    showMap = false;
  }

  if (showMap) {

    $('#bttnCreateMap').prop('disabled', true);
    $('#bttnResetMap').prop('disabled', false);
    $('#bttnSaveMap').prop('disabled', false);
    $('#hdrCounter').css("visibility", "visible");

    mapFinal = [y];
    var mapTemplate = [y];
    for (i = 0; i < y; i++) {
      mapTemplate[i] = 'f'.repeat(x);
    }

    $('#hddnMapX').val(x);
    $('#hddnMapY').val(y);

    var $hddnMapToSave = $('#hddnMapToSave');
    var seatsId = [];
    var $hddCounter = $('#hddnCounter');
    var $counter = $('#counter');
    var sc = $('#seat-map').seatCharts({
      showLabel: false,
      map: mapTemplate,
      seats: {
        f: {
          classes: 'first-class'
        }
      },
      naming: {
        top: false,
        getLabel: function (character, row, column) {
          return firstSeatLabel++;
        }
      },
      click: function () {
        var return_style
        if (this.status() == 'available') {
          $hddCounter.val(sc.find('selected').length + 1);
          seatsId.push(this.settings.id);
          return_style = 'selected';
        } else if (this.status() == 'selected') {
          $hddCounter.val(sc.find('selected').length - 1);
          remove(seatsId, this.settings.id)
          return_style = 'available';
        } else if (this.status() == 'unavailable') {
          return_style = 'unavailable';
        } else {
          return_style = this.style();
        }
        $hddnMapToSave.val(seatsId.toString());
        $counter.text($hddCounter.val());
        return return_style;
      }
    });

  }

});

</script>
