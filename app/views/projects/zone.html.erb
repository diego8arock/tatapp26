<% content_for :head do %>
  <%= javascript_include_tag 'lib/jsDraw2D.js' %>
<% end %>

<h2>Seleccionar Zona</h2>

<%= form_with(model: @project, local: true) do |form| %>
<div style="padding-bottom: 20px; padding-top: 20px;">
  <table>
    <tr>
      <td style="padding-right: 5px;">
        <label for="cmbbxProjects"><%= t('project') %></label>
      </td>
      <td><%= form.select :project_id, Project.all.collect { |m| [ m.name, m.id ] }, {}, :id => "cmbbxProjects" %></td>
      <td>
        <button type="button" data-toggle="modal" data-target="#zoneModal" id="bttnShowModal">Ajustar Puntos</button>
      </td>
      <td>
        <button type="button" id="bttnGenerateZone">Generar Zona</button>
      </td>
      <td>
        <button type="button" id="bttnClearCanvas">Borrar Zona</button>
      </td>
      <td style="padding-left: 70px;">
        <button type="button">Guardar Zona</button>
      </td>
    </tr>
  </table>
</div>
<div>
  <table>
    <tbody>
      <tr>
        <td valign="top">
          <div id="canvas" style="overflow:hidden;position:relative;width:1430px;height:882px;border:#999999 1px solid; background-image: url('/assets/floor.png')"></div>
        </td>
      </tr>
    </tbody>
  </table>
</div>

<div id="zoneModal" class="modal fade" role="dialog">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title"><%= t('maps.assign') %></h4>
      </div>
      <div class="modal-body">
        <table id="pointsTable">
          <tbody>
            <tr id="header">
              <td>
                <label>#</label>
              </td>
              <td>
                <label>X</label>
              </td>
              <td>
                <label>Y</label>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" id="bttnAcceptModal"><%= t('accept') %></button>
        <button type="button" class="btn btn-default" data-dismiss="modal"><%= t('cancel') %></button>
      </div>
    </div>
  </div>
</div>
<% end %>

<script type="text/javascript">
var canvasDiv = document.getElementById("canvas");
var container = document.getElementById("main-container");
var style = container.currentStyle || window.getComputedStyle(container);
var gr;
var penWidth;
var col;
var pen;
var d1,
  d2;

var points = new Array();
var coordinates = new Array();
var pointIndex = 0;
var font;
var bluePen;

gr = new jsGraphics(canvasDiv);
setPenColor(true);
font = new jsFont("arial", "bold", "12px");
bluePen = new jsPen(new jsColor("red"), 1);

var ie = false;
if (document.all)
  ie = true;

if (!ie) {
  //canvasDiv.captureEvents(Event.MOUSEMOVE) canvasDiv.captureEvents(Event.CLICK)
}
canvasDiv.onmousemove = getMouseXY;
canvasDiv.onclick = drawPoint;

var mouseX = 0
var mouseY = 0

//Get mouse position
function getMouseXY(e) {
  if (ie) {
    mouseX = event.clientX + document.body.parentElement.scrollLeft;
    mouseY = event.clientY + document.body.parentElement.scrollTop;
  } else {
    mouseX = e.pageX
    mouseY = e.pageY
  }

  if (mouseX < 0) {
    mouseX = 0
  }
  if (mouseY < 0) {
    mouseY = 0
  }

  mouseX = mouseX - canvasDiv.offsetLeft;
  mouseY = mouseY - canvasDiv.offsetTop;

  return true;
}

function setPenColor(noAlert) {
  col = new jsColor("blue");
  penWidth = 5;

  if (!isNaN(penWidth))
    pen = new jsPen(col, penWidth);
  else
    pen = new jsPen(col, 1);

  if (!noAlert) {
    if (points.length == 0) {
      alert("Please click at any location on the blank canvas at left side to plot the points!");
      return false;
    } else if (points.length == 1) {
      alert("2 or more points are required to draw a line, polyline or polygon! Please plot more points by clicking at any location on the blank canvas at left side.");
      return false;
    }
  }
  return true;
}

function drawPoint() {
  pointIndex++;
  var offset = style.marginLeft.replace("px", "");
  var mouseXOffSet = mouseX - offset;
  var mouseYOffSet = mouseY - 6;
  gr.fillRectangle(new jsColor("green"), new jsPoint(mouseXOffSet, mouseYOffSet), 6, 6);
  var jsPointCanvas = new jsPoint(mouseXOffSet, mouseYOffSet);
  points[points.length] = jsPointCanvas;
  coordinates[coordinates.length] = "[" + mouseXOffSet + "," + mouseYOffSet + "]";
  gr.drawText("P" + pointIndex, jsPointCanvas, font, bluePen.color, 90);
  addPointToTable(mouseXOffSet, mouseYOffSet);
}

function drawPolygon() {
  if (!setPenColor())
    return;
  gr.drawPolygon(pen, points);
}

function addPointToTable(x, y) {
  $('#pointsTable tr:last').after("<tr><td>" + pointIndex + "</td><td><input type='text' name='x' value='" + x + "'></td><td> <input type='text' name='y' value='" + y + "'></td></tr>");
}

$("#bttnAcceptModal").click(function () {
  clearCanvas(false);
  var trs = $('#pointsTable > tbody > tr');
  trs.each(function () {
    var pX = -1;
    var pY = -1;
    $(this).children('td').each(function () {
      var data = $(this).html();
      var $ele = $(this).children('input')[0];
      if ($ele != null) {
        if ($ele.name == "x") {
          pX = parseInt($ele.value);
        } else {
          pY = parseInt($ele.value);
        }
      }

    });
    if (pY != -1 && pX != -1) {
      reDrawPoint(pX, pY);
    }

  });
  drawPolygon();
  $('#zoneModal').modal('toggle');
});

function reDrawPoint(pX, pY) {
  pointIndex++;
  gr.fillRectangle(new jsColor("green"), new jsPoint(pX - 3, pY - 3), 6, 6);
  var jsPointCanvas = new jsPoint(pX, pY);
  points[points.length] = jsPointCanvas
  coordinates[coordinates.length] = "[" + pX + "," + pY + "]";
  gr.drawText("P" + pointIndex, jsPointCanvas, font, bluePen.color, 90);
}

function clearCanvas(table) {
  gr.clear();
  pointIndex = 0;
  points = new Array();
  coordinates = new Array();
  if (table) {
    emptyTable();
  }
}

function emptyTable() {
  var trs = $('#pointsTable > tbody > tr');
  trs.each(function () {
    if ($(this).attr('id') != "header") {
      $(this).remove();
    }
  });
}

$('#bttnGenerateZone').click(function () {
  if (points.length < 3) {
    alert("No hay suficientes puntos para generar una zona.")
  } else {
    drawPolygon();
  }
});

$('#bttnClearCanvas').click(function () {
  if (confirm("Desea borrar todo los puntos?")) {
    clearCanvas(true);
  }
});
</script>
